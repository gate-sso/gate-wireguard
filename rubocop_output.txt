rubocop-rails extension supports plugin, specify `plugins: rubocop-rails` instead of `require: rubocop-rails` in /home/ajey/workspace/gate-wireguard/.rubocop.yml.
For more information, see https://docs.rubocop.org/rubocop/plugin_migration_guide.html.
rubocop-rspec extension supports plugin, specify `plugins: rubocop-rspec` instead of `require: rubocop-rspec` in /home/ajey/workspace/gate-wireguard/.rubocop.yml.
For more information, see https://docs.rubocop.org/rubocop/plugin_migration_guide.html.
rubocop-rspec_rails extension supports plugin, specify `plugins: rubocop-rspec_rails` instead of `require: rubocop-rspec_rails` in /home/ajey/workspace/gate-wireguard/.rubocop.yml.
For more information, see https://docs.rubocop.org/rubocop/plugin_migration_guide.html.
Inspecting 84 files
....CCCCCCCCCCWC.C..CCC......C..C...........C......C........C..CC...CCCCCC.CC.CCCCC.

Offenses:

app/controllers/admin_controller.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class AdminController.
class AdminController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin_controller.rb:38:3: C: Metrics/AbcSize: Assignment Branch Condition size for update_vpn_configuration is too high. [<3, 28, 4> 28.44/17]
  def update_vpn_configuration ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin_controller.rb:38:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def update_vpn_configuration ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin_controller.rb:47:121: C: Layout/LineLength: Line is too long. [123/120]
        @vpn_configuration.server_vpn_ip_address = "#{vpn_configuration_params[:wg_ip_range].split('.')[0..2].join('.')}.1"
                                                                                                                        ^^^
app/controllers/admin_controller.rb:51:74: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to admin_vpn_configurations_path, notice: 'Vpn configuration was successfully updated.' }
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin_controller.rb:60:3: C: Metrics/AbcSize: Assignment Branch Condition size for add_network_address is too high. [<5, 24, 3> 24.7/17]
  def add_network_address ...
  ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin_controller.rb:60:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def add_network_address ...
  ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin_controller.rb:73:72: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to '/admin/vpn_configurations', notice: 'Network address was successfully added.' }
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin_controller.rb:91:70: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to '/admin/vpn_configurations', notice: 'Network address was deleted' }
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admin_controller.rb:106:121: C: Layout/LineLength: Line is too long. [139/120]
                                        wg_network_address wg_interface_name wg_listen_address wg_keep_alive wg_forward_interface wg_fqdn])
                                                                                                                        ^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationController.
class ApplicationController < ActionController::Base
^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:19:36: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
    redirect_to login_path, alert: 'You must be logged in to access this page.'
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dns_records_controller.rb:17:43: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
    redirect_to dns_records_path, notice: 'DNS zones were refreshed successfully.'
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dns_records_controller.rb:27:45: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      redirect_to dns_records_path, notice: 'DNS record was successfully created.'
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dns_records_controller.rb:37:43: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
    redirect_to dns_records_path, notice: 'DNS record was successfully destroyed.'
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/home_controller.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class HomeController.
class HomeController < ApplicationController
^^^^^^^^^^^^^^^^^^^^
app/controllers/sessions_controller.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class SessionsController.
class SessionsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class VpnDevicesController.
class VpnDevicesController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:4:3: C: Rails/LexicallyScopedActionFilter: edit is not explicitly defined on the class.
  before_action :set_vpn_device, only: %i[show edit update destroy]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:18:35: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
    redirect_to root_path, alert: 'Vpn device description is empty.' if @vpn_device.description.blank?
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:22:3: C: Metrics/AbcSize: Assignment Branch Condition size for download_config is too high. [<6, 17, 4> 18.47/17]
  def download_config ...
  ^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:22:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def download_config ...
  ^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:25:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/vpn_devices_controller.rb:28:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render plain: "VPN configuration not found", status: :service_unavailable
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:31:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/vpn_devices_controller.rb:35:5: C: [Correctable] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
    if @vpn_configuration.wg_fqdn.present? ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:49:3: C: Metrics/AbcSize: Assignment Branch Condition size for new is too high. [<2, 17, 2> 17.23/17]
  def new ...
  ^^^^^^^
app/controllers/vpn_devices_controller.rb:49:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def new ...
  ^^^^^^^
app/controllers/vpn_devices_controller.rb:56:54: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to root_path, notice: 'Vpn device was successfully updated.' }
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:71:45: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      redirect_to vpn_devices_path, notice: 'WireGuard interface created successfully.'
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:81:54: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to root_path, notice: 'Vpn device was successfully updated.' }
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/vpn_devices_controller.rb:94:52: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to root_path, notice: 'Vpn device was successfully destroyed.' }
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationHelper.
module ApplicationHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/dns_records_helper.rb:7:5: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
    @result = false
    ^^^^^^^
app/helpers/dns_records_helper.rb:10:7: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
      @result = dns_resolver.getresources(domain, Resolv::DNS::Resource::IN::A).any? ||
      ^^^^^^^
app/helpers/dns_records_helper.rb:13:7: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
      @result = false
      ^^^^^^^
app/helpers/dns_records_helper.rb:17:5: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
    @result
    ^^^^^^^
app/helpers/dns_records_helper.rb:22:5: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
    @result = nil
    ^^^^^^^
app/helpers/dns_records_helper.rb:25:7: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
      @result = dns_resolver.getaddress(domain)
      ^^^^^^^
app/helpers/dns_records_helper.rb:27:7: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
      @result = nil
      ^^^^^^^
app/helpers/dns_records_helper.rb:31:5: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
    @result
    ^^^^^^^
app/helpers/network_interface_helper.rb:5:3: C: Metrics/AbcSize: Assignment Branch Condition size for get_default_gateway_interface is too high. [<9, 14, 7> 18.06/17]
  def self.get_default_gateway_interface ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:5:3: C: Metrics/MethodLength: Method has too many lines. [48/10]
  def self.get_default_gateway_interface ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:5:12: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def self.get_default_gateway_interface
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:6:5: C: [Correctable] Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
app/helpers/network_interface_helper.rb:12:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          error: "No default route found",
                 ^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:21:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          error: "Could not parse device name from route",
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:36:121: C: Layout/LineLength: Line is too long. [122/120]
        ip_addr_output = `ip addr show #{interface_name} 2>/dev/null | grep 'inet ' | grep -v '127.0.0.1' | head -1`.strip
                                                                                                                        ^^
app/helpers/network_interface_helper.rb:59:5: C: [Correctable] Style/RescueStandardError: Avoid rescuing without specifying an error class.
    rescue => e
    ^^^^^^
app/helpers/network_interface_helper.rb:68:3: C: Metrics/MethodLength: Method has too many lines. [32/10]
  def self.get_all_interfaces ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:68:12: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def self.get_all_interfaces
           ^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:69:5: C: [Correctable] Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
app/helpers/network_interface_helper.rb:79:121: C: Layout/LineLength: Line is too long. [129/120]
        # Interface line: "2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000"
                                                                                                                        ^^^^^^^^^
app/helpers/network_interface_helper.rb:81:31: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(2) over $2.
          current_interface = $2
                              ^^
app/helpers/network_interface_helper.rb:86:17: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(1) over $1.
            ip: $1
                ^^
app/helpers/network_interface_helper.rb:94:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { name: "eth0", ip: "192.168.1.100" },
                  ^^^^^^
app/helpers/network_interface_helper.rb:94:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { name: "eth0", ip: "192.168.1.100" },
                              ^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:95:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { name: "wlan0", ip: "192.168.1.101" }
                  ^^^^^^^
app/helpers/network_interface_helper.rb:95:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { name: "wlan0", ip: "192.168.1.101" }
                               ^^^^^^^^^^^^^^^
app/helpers/network_interface_helper.rb:103:5: C: [Correctable] Style/RescueStandardError: Avoid rescuing without specifying an error class.
    rescue => e
    ^^^^^^
app/helpers/network_interface_helper.rb:112:12: C: Naming/PredicatePrefix: Rename is_default_gateway_interface? to default_gateway_interface?.
  def self.is_default_gateway_interface?(interface_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_fixed.rb:5:3: C: Metrics/AbcSize: Assignment Branch Condition size for get_default_gateway_interface is too high. [<9, 14, 7> 18.06/17]
  def self.get_default_gateway_interface ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_fixed.rb:5:3: C: Metrics/MethodLength: Method has too many lines. [48/10]
  def self.get_default_gateway_interface ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_fixed.rb:5:12: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def self.get_default_gateway_interface
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_fixed.rb:6:5: C: [Correctable] Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
app/helpers/network_interface_helper_fixed.rb:12:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          error: "No default route found",
                 ^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_fixed.rb:21:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          error: "Could not parse device name from route",
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_fixed.rb:36:121: C: Layout/LineLength: Line is too long. [122/120]
        ip_addr_output = `ip addr show #{interface_name} 2>/dev/null | grep 'inet ' | grep -v '127.0.0.1' | head -1`.strip
                                                                                                                        ^^
app/helpers/network_interface_helper_fixed.rb:59:5: C: [Correctable] Style/RescueStandardError: Avoid rescuing without specifying an error class.
    rescue => e
    ^^^^^^
app/helpers/network_interface_helper_new.rb:1:1: W: Lint/EmptyFile: Empty file detected.
app/helpers/network_interface_helper_simple.rb:4:1: C: Metrics/ModuleLength: Module has too many lines. [103/100]
module NetworkInterfaceHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:5:3: C: Metrics/MethodLength: Method has too many lines. [36/10]
  def self.get_default_gateway_interface ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:5:12: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def self.get_default_gateway_interface
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:6:5: C: [Correctable] Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
app/helpers/network_interface_helper_simple.rb:18:7: C: [Correctable] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      unless interface_match
      ^^^^^^
app/helpers/network_interface_helper_simple.rb:48:5: C: [Correctable] Style/RescueStandardError: Avoid rescuing without specifying an error class.
    rescue => e
    ^^^^^^
app/helpers/network_interface_helper_simple.rb:57:3: C: Metrics/MethodLength: Method has too many lines. [32/10]
  def self.get_all_interfaces ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:57:12: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def self.get_all_interfaces
           ^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:58:5: C: [Correctable] Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
app/helpers/network_interface_helper_simple.rb:68:121: C: Layout/LineLength: Line is too long. [129/120]
        # Interface line: "2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000"
                                                                                                                        ^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:70:31: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(2) over $2.
          current_interface = $2
                              ^^
app/helpers/network_interface_helper_simple.rb:75:17: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(1) over $1.
            ip: $1
                ^^
app/helpers/network_interface_helper_simple.rb:83:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { name: "eth0", ip: "192.168.1.100" },
                  ^^^^^^
app/helpers/network_interface_helper_simple.rb:83:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { name: "eth0", ip: "192.168.1.100" },
                              ^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:84:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { name: "wlan0", ip: "192.168.1.101" }
                  ^^^^^^^
app/helpers/network_interface_helper_simple.rb:84:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { name: "wlan0", ip: "192.168.1.101" }
                               ^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:92:5: C: [Correctable] Style/RescueStandardError: Avoid rescuing without specifying an error class.
    rescue => e
    ^^^^^^
app/helpers/network_interface_helper_simple.rb:101:12: C: Naming/PredicatePrefix: Rename is_default_gateway_interface? to default_gateway_interface?.
  def self.is_default_gateway_interface?(interface_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:111:5: C: Metrics/MethodLength: Method has too many lines. [21/10]
    def get_first_interface ...
    ^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:111:9: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
    def get_first_interface
        ^^^^^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:120:31: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(2) over $2.
          current_interface = $2
                              ^^
app/helpers/network_interface_helper_simple.rb:125:25: C: [Correctable] Style/PerlBackrefs: Prefer ::Regexp.last_match(1) over $1.
            ip_address: $1,
                        ^^
app/helpers/network_interface_helper_simple.rb:133:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        interface_name: "eth0",
                        ^^^^^^
app/helpers/network_interface_helper_simple.rb:134:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ip_address: "192.168.1.100",
                    ^^^^^^^^^^^^^^^
app/helpers/network_interface_helper_simple.rb:136:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        note: "Fallback interface - could not detect real network configuration"
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationMailer.
class ApplicationMailer < ActionMailer::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/models/ip_allocation.rb:5:3: C: Rails/UniqueValidationWithoutIndex: Uniqueness validation should have a unique index on the database column.
  validates :ip_address, presence: true, uniqueness: true
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/ip_allocation.rb:17:12: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def self.get_base_ip
           ^^^^^^^^^^^
app/models/network_address.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class NetworkAddress.
class NetworkAddress < ApplicationRecord
^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class User.
class User < ApplicationRecord
^^^^^^^^^^
app/models/user.rb:5:3: C: Metrics/AbcSize: Assignment Branch Condition size for from_omniauth is too high. [<6, 16, 0> 17.09/17]
  def self.from_omniauth(auth) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:24:3: C: Style/Documentation: Missing top-level documentation comment for class GateWireguard::Application.
  class Application < Rails::Application
  ^^^^^^^^^^^^^^^^^
config/environments/development.rb:5:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
Rails.application.configure do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/sass_deprecation.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Suppress Sass deprecation warnings from Bootstrap
^
config/initializers/sass_deprecation.rb:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "application.bootstrap.scss" => "application.css"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/sass_deprecation.rb:7:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "application.bootstrap.scss" => "application.css"
                                    ^^^^^^^^^^^^^^^^^
config/initializers/sass_deprecation.rb:9:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Rails.application.config.dartsass.build_options << "--quiet-deps"
                                                     ^^^^^^^^^^^^^^
db/migrate/20240415032022_add_admin_to_users.rb:5:5: C: Rails/ThreeStateBooleanColumn: Boolean columns should always have a default value and a NOT NULL constraint.
    add_column :users, :admin, :boolean
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20240531070925_add_node_to_vpn_device.rb:5:5: C: Rails/ThreeStateBooleanColumn: Boolean columns should always have a default value and a NOT NULL constraint.
    add_column :vpn_devices, :node, :boolean
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20250811093355_add_server_fqdn_to_vpn_configurations.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddServerFqdnToVpnConfigurations < ActiveRecord::Migration[8.0]
^
db/migrate/20250811100438_rename_server_fqdn_to_wg_fqdn.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class RenameServerFqdnToWgFqdn < ActiveRecord::Migration[8.0]
^
spec/helpers/network_interface_detection_integration_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/network_interface_detection_integration_spec.rb:4:16: C: RSpec/DescribeClass: The first argument to describe should be the class or module being tested.
RSpec.describe 'Network Interface Detection Integration' do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_detection_integration_spec.rb:6:5: C: RSpec/ExampleLength: Example has too many lines. [12/5]
    it 'can detect network interfaces in real environment' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_detection_integration_spec.rb:6:5: C: RSpec/MultipleExpectations: Example has too many expectations [8/1].
    it 'can detect network interfaces in real environment' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_detection_integration_spec.rb:24:5: C: RSpec/ExampleLength: Example has too many lines. [10/5]
    it 'can enumerate all interfaces' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_detection_integration_spec.rb:24:5: C: RSpec/MultipleExpectations: Example has too many expectations [7/1].
    it 'can enumerate all interfaces' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_detection_integration_spec.rb:39:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'can check if interface is default gateway' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/network_interface_helper_spec.rb:6:7: C: RSpec/ExampleLength: Example has too many lines. [7/5]
      it 'parses device name and src IP from ip route output' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:6:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'parses device name and src IP from ip route output' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:18:7: C: RSpec/ExampleLength: Example has too many lines. [10/5]
      it 'falls back to ip addr when no src IP in route' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:18:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'falls back to ip addr when no src IP in route' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:22:121: C: Layout/LineLength: Line is too long. [142/120]
        allow(described_class).to receive(:`).with("ip addr show eth0 2>/dev/null | grep 'inet ' | grep -v '127.0.0.1' | head -1").and_return(
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:35:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'returns error status' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:46:7: C: RSpec/ExampleLength: Example has too many lines. [6/5]
      it 'returns error when device name cannot be parsed' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:46:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'returns error when device name cannot be parsed' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:59:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'handles exceptions gracefully' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:71:5: C: RSpec/ExampleLength: Example has too many lines. [12/5]
    it 'parses multiple interfaces from ip addr output' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:71:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'parses multiple interfaces from ip addr output' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:72:121: C: Layout/LineLength: Line is too long. [137/120]
      allow(described_class).to receive(:`).with("ip addr show 2>/dev/null | grep -E '^[0-9]+:|inet ' | grep -v '127.0.0.1'").and_return(
                                                                                                                        ^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:73:9: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
        "2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500\n" + ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:73:65: C: [Correctable] Style/LineEndConcatenation: Use \ instead of + to concatenate multiline strings.
        "2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500\n" +
                                                                ^
spec/helpers/network_interface_helper_spec.rb:74:83: C: [Correctable] Style/LineEndConcatenation: Use \ instead of + to concatenate multiline strings.
        "    inet 192.168.1.100/24 brd 192.168.1.255 scope global dynamic eth0\n" +
                                                                                  ^
spec/helpers/network_interface_helper_spec.rb:75:66: C: [Correctable] Style/LineEndConcatenation: Use \ instead of + to concatenate multiline strings.
        "3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500\n" +
                                                                 ^
spec/helpers/network_interface_helper_spec.rb:76:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "    inet 192.168.1.101/24 brd 192.168.1.255 scope global dynamic wlan0"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:88:5: C: RSpec/ExampleLength: Example has too many lines. [7/5]
    it 'provides fallback data when no interfaces found' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:88:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'provides fallback data when no interfaces found' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:102:5: C: RSpec/ExampleLength: Example has too many lines. [7/5]
    it 'returns true for the default gateway interface' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/network_interface_helper_spec.rb:102:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'returns true for the default gateway interface' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/javascript/fqdn_resolver_spec.rb:3:16: C: RSpec/DescribeClass: The first argument to describe should be the class or module being tested.
RSpec.describe 'FQDN Resolver JavaScript Controller' do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:6:25: C: [Correctable] Rails/FilePath: Prefer Rails.root.join('path/to').
      controller_path = Rails.root.join('app', 'javascript', 'controllers', 'fqdn_resolver_controller.js')
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:10:5: C: RSpec/ExampleLength: Example has too many lines. [8/5]
    it 'contains the expected controller class and methods' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:10:5: C: RSpec/MultipleExpectations: Example has too many expectations [6/1].
    it 'contains the expected controller class and methods' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:11:25: C: [Correctable] Rails/FilePath: Prefer Rails.root.join('path/to').
      controller_path = Rails.root.join('app', 'javascript', 'controllers', 'fqdn_resolver_controller.js')
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:22:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'includes DNS over HTTPS functionality' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:23:25: C: [Correctable] Rails/FilePath: Prefer Rails.root.join('path/to').
      controller_path = Rails.root.join('app', 'javascript', 'controllers', 'fqdn_resolver_controller.js')
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:30:5: C: RSpec/ExampleLength: Example has too many lines. [6/5]
    it 'includes proper error handling and validation' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:30:5: C: RSpec/MultipleExpectations: Example has too many expectations [4/1].
    it 'includes proper error handling and validation' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:31:25: C: [Correctable] Rails/FilePath: Prefer Rails.root.join('path/to').
      controller_path = Rails.root.join('app', 'javascript', 'controllers', 'fqdn_resolver_controller.js')
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:56:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'supports both FQDN and IP address together' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:67:5: C: RSpec/ExampleLength: Example has too many lines. [6/5]
    it 'verifies admin view template includes FQDN resolver controller' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:67:5: C: RSpec/MultipleExpectations: Example has too many expectations [4/1].
    it 'verifies admin view template includes FQDN resolver controller' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:68:23: C: [Correctable] Rails/FilePath: Prefer Rails.root.join('path/to').
      template_path = Rails.root.join('app', 'views', 'admin', 'vpn_configurations.html.erb')
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/javascript/fqdn_resolver_spec.rb:78:23: C: [Correctable] Rails/FilePath: Prefer Rails.root.join('path/to').
      template_path = Rails.root.join('app', 'views', 'admin', 'vpn_configurations.html.erb')
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:30:5: C: RSpec/ExampleLength: Example has too many lines. [7/5]
    it 'generates server configuration with proper defaults' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:30:5: C: RSpec/MultipleExpectations: Example has too many expectations [6/1].
    it 'generates server configuration with proper defaults' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:41:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'generates unique keys each time' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:58:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'uses FQDN as endpoint' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:65:7: C: RSpec/ExampleLength: Example has too many lines. [6/5]
      it 'includes all required sections' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:65:7: C: RSpec/MultipleExpectations: Example has too many expectations [5/1].
      it 'includes all required sections' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:83:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'uses IP address as endpoint' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:96:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'uses custom DNS servers' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:134:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'includes all network addresses in AllowedIPs' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:169:13: C: RSpec/ContextWording: Context description should match /^when\b/, /^with\b/, or /^without\b/.
    context 'both FQDN and IP configured' do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:177:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'prioritizes FQDN over IP address' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:185:13: C: RSpec/ContextWording: Context description should match /^when\b/, /^with\b/, or /^without\b/.
    context 'only IP configured' do
            ^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:200:13: C: RSpec/ContextWording: Context description should match /^when\b/, /^with\b/, or /^without\b/.
    context 'empty FQDN with IP configured' do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:247:13: C: RSpec/ContextWording: Context description should match /^when\b/, /^with\b/, or /^without\b/.
    context 'professional FQDN setup' do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:258:7: C: RSpec/ExampleLength: Example has too many lines. [12/5]
      it 'generates complete professional configuration' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:258:7: C: RSpec/MultipleExpectations: Example has too many expectations [11/1].
      it 'generates complete professional configuration' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:278:13: C: RSpec/ContextWording: Context description should match /^when\b/, /^with\b/, or /^without\b/.
    context 'basic IP setup' do
            ^^^^^^^^^^^^^^^^
spec/lib/wireguard_config_generator_spec.rb:287:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'generates basic IP-based configuration' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:18:3: C: [Correctable] RSpec/EmptyHook: Empty hook detected.
  after do
  ^^^^^
spec/models/dns_record_spec.rb:27:87: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      result = DnsRecordsHelper.resolve_dns_record('orbit.soracloud.dev', dns_server: @dns_server,
                                                                                      ^^^^^^^^^^^
spec/models/dns_record_spec.rb:28:92: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
                                                                          dns_server_port: @dns_server_port)
                                                                                           ^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:33:5: C: RSpec/ExampleLength: Example has too many lines. [16/5]
    it 'adds the dns record to redis' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:33:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'adds the dns record to redis' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:43:72: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      allow(DnsRecordsHelper).to receive(:get_ip_addres).with("orbit.#{@dns_zone}", dns_server: @dns_server,
                                                                       ^^^^^^^^^
spec/models/dns_record_spec.rb:43:97: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      allow(DnsRecordsHelper).to receive(:get_ip_addres).with("orbit.#{@dns_zone}", dns_server: @dns_server,
                                                                                                ^^^^^^^^^^^
spec/models/dns_record_spec.rb:44:102: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
                                                                                    dns_server_port: @dns_server_port).and_return('10.8.1.1')
                                                                                                     ^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:44:121: C: Layout/LineLength: Line is too long. [141/120]
                                                                                    dns_server_port: @dns_server_port).and_return('10.8.1.1')
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:45:74: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      allow(DnsRecordsHelper).to receive(:get_ip_addres).with("orbit01.#{@dns_zone}", dns_server: @dns_server,
                                                                         ^^^^^^^^^
spec/models/dns_record_spec.rb:45:99: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      allow(DnsRecordsHelper).to receive(:get_ip_addres).with("orbit01.#{@dns_zone}", dns_server: @dns_server,
                                                                                                  ^^^^^^^^^^^
spec/models/dns_record_spec.rb:46:104: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
                                                                                      dns_server_port: @dns_server_port).and_return('10.8.2.2')
                                                                                                       ^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:46:121: C: Layout/LineLength: Line is too long. [143/120]
                                                                                      dns_server_port: @dns_server_port).and_return('10.8.2.2')
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:48:32: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      described_class.add_host(@dns_zone, 'orbit', '10.8.1.1')
                               ^^^^^^^^^
spec/models/dns_record_spec.rb:49:32: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      described_class.add_host(@dns_zone, 'orbit01', '10.8.2.2')
                               ^^^^^^^^^
spec/models/dns_record_spec.rb:51:57: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      result1 = DnsRecordsHelper.get_ip_addres("orbit.#{@dns_zone}", dns_server: @dns_server,
                                                        ^^^^^^^^^
spec/models/dns_record_spec.rb:51:82: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      result1 = DnsRecordsHelper.get_ip_addres("orbit.#{@dns_zone}", dns_server: @dns_server,
                                                                                 ^^^^^^^^^^^
spec/models/dns_record_spec.rb:52:87: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
                                                                     dns_server_port: @dns_server_port)
                                                                                      ^^^^^^^^^^^^^^^^
spec/models/dns_record_spec.rb:55:59: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      result2 = DnsRecordsHelper.get_ip_addres("orbit01.#{@dns_zone}", dns_server: @dns_server,
                                                          ^^^^^^^^^
spec/models/dns_record_spec.rb:55:84: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
      result2 = DnsRecordsHelper.get_ip_addres("orbit01.#{@dns_zone}", dns_server: @dns_server,
                                                                                   ^^^^^^^^^^^
spec/models/dns_record_spec.rb:56:89: C: RSpec/InstanceVariable: Avoid instance variables - use let, a method call, or a local variable (if possible).
                                                                       dns_server_port: @dns_server_port)
                                                                                        ^^^^^^^^^^^^^^^^
spec/models/fqdn_resolution_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/fqdn_resolution_spec.rb:3:16: C: RSpec/DescribeClass: The first argument to describe should be the class or module being tested.
RSpec.describe 'FQDN Resolution' do
               ^^^^^^^^^^^^^^^^^
spec/models/fqdn_resolution_spec.rb:5:5: C: RSpec/ExampleLength: Example has too many lines. [10/5]
    it 'saves wg_fqdn and wg_ip_address correctly' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/fqdn_resolution_spec.rb:5:5: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
    it 'saves wg_fqdn and wg_ip_address correctly' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/fqdn_resolution_spec.rb:19:5: C: RSpec/ExampleLength: Example has too many lines. [10/5]
    it 'allows empty FQDN while keeping IP address' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/fqdn_resolution_spec.rb:19:5: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
    it 'allows empty FQDN while keeping IP address' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/fqdn_resolution_spec.rb:33:5: C: RSpec/ExampleLength: Example has too many lines. [10/5]
    it 'can handle nil values for FQDN and IP address' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/fqdn_resolution_spec.rb:33:5: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
    it 'can handle nil values for FQDN and IP address' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:5:16: C: RSpec/DescribeClass: The first argument to describe should be the class or module being tested.
RSpec.describe 'Network Address Auto-calculation' do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:9:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(admin_user)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:14:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'provides correct calculation logic for /24 network' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:25:5: C: RSpec/ExampleLength: Example has too many lines. [6/5]
    it 'handles network address correction logic' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:25:5: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
    it 'handles network address correction logic' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:37:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'handles /16 networks correctly' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:45:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'handles /30 networks correctly' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:53:5: C: RSpec/ExampleLength: Example has too many lines. [6/5]
    it 'defaults to /24 when no CIDR specified' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:53:5: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
    it 'defaults to /24 when no CIDR specified' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:63:13: C: RSpec/ContextWording: Context description should match /^when\b/, /^with\b/, or /^without\b/.
    context 'edge cases' do
            ^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:64:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'handles /31 networks' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:72:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'handles /32 networks' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:80:7: C: RSpec/ExampleLength: Example has too many lines. [10/5]
      it 'validates network correction expectations' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/network_address_calculation_spec.rb:80:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'validates network correction expectations' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:5:34: C: [Correctable] RSpecRails/InferredSpecType: Remove redundant spec type.
RSpec.describe VpnConfiguration, type: :model do
                                 ^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:6:29: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
  let(:vpn_configuration) { VpnConfiguration.new }
                            ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:32:7: C: RSpec/ExampleLength: Example has too many lines. [9/5]
      it 'creates a new configuration' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:32:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'creates a new configuration' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:35:74: C: RSpec/VerifiedDoubles: Prefer using verifying doubles over normal doubles.
                                                                         double(success?: true)])
                                                                         ^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:38:93: C: RSpec/VerifiedDoubles: Prefer using verifying doubles over normal doubles.
                                                                                            double(success?: true)])
                                                                                            ^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:40:16: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        expect(VpnConfiguration.count).to eq(0)
               ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:41:18: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        config = VpnConfiguration.get_vpn_configuration
                 ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:42:16: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        expect(VpnConfiguration.count).to eq(1)
               ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:43:32: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        expect(config).to be_a(VpnConfiguration)
                               ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:46:7: C: RSpec/ExampleLength: Example has too many lines. [11/5]
      it 'sets default values' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:46:7: C: RSpec/MultipleExpectations: Example has too many expectations [5/1].
      it 'sets default values' do
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:49:74: C: RSpec/VerifiedDoubles: Prefer using verifying doubles over normal doubles.
                                                                         double(success?: true)])
                                                                         ^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:52:93: C: RSpec/VerifiedDoubles: Prefer using verifying doubles over normal doubles.
                                                                                            double(success?: true)])
                                                                                            ^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:54:18: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        config = VpnConfiguration.get_vpn_configuration
                 ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:64:30: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let!(:existing_config) {
                             ^
spec/models/vpn_configuration_spec.rb:65:9: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        VpnConfiguration.create!(
        ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:74:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'returns existing configuration' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:75:18: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        config = VpnConfiguration.get_vpn_configuration
                 ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:77:16: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        expect(VpnConfiguration.count).to eq(1)
               ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:83:19: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    let!(:config) {
                  ^
spec/models/vpn_configuration_spec.rb:84:7: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
      VpnConfiguration.create!(
      ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:114:21: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
    let!(:config) { VpnConfiguration.create!(wg_ip_range: '10.42.5.0/24', server_vpn_ip_address: '10.42.5.254') }
                    ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:124:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'can update network configuration' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:133:21: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
    let!(:config) { VpnConfiguration.create! }
                    ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:152:13: C: RSpec/ContextWording: Context description should match /^when\b/, /^with\b/, or /^without\b/.
    context 'FQDN-based setup' do
            ^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:154:9: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        VpnConfiguration.create!(
        ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:164:7: C: RSpec/ExampleLength: Example has too many lines. [6/5]
      it 'saves all configuration correctly' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:164:7: C: RSpec/MultipleExpectations: Example has too many expectations [6/1].
      it 'saves all configuration correctly' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:174:13: C: RSpec/ContextWording: Context description should match /^when\b/, /^with\b/, or /^without\b/.
    context 'IP-only setup' do
            ^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:176:9: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
        VpnConfiguration.create!(
        ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:184:7: C: RSpec/MultipleExpectations: Example has too many expectations [4/1].
      it 'works without FQDN' do
      ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:194:21: C: [Correctable] RSpec/DescribedClass: Use described_class instead of VpnConfiguration.
    let!(:config) { VpnConfiguration.create! }
                    ^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:196:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'has many network_addresses' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/vpn_configuration_spec.rb:203:37: C: [Correctable] RSpec/ExpectChange: Prefer change(NetworkAddress, :count).
      expect { config.destroy! }.to change { NetworkAddress.count }.by(-1)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/admin_fqdn_spec.rb:3:44: C: [Correctable] RSpecRails/InferredSpecType: Remove redundant spec type.
RSpec.describe 'Admin FQDN Configuration', type: :request do
                                           ^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:4:20: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:admin_user) {
                   ^
spec/requests/admin_fqdn_spec.rb:16:5: C: RSpec/ExampleLength: Example has too many lines. [12/5]
    it 'updates VPN configuration with wg_fqdn parameter' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:16:5: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
    it 'updates VPN configuration with wg_fqdn parameter' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:18:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ActionController::Base).to receive(:session).and_return({ user_id: admin_user.id })
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:34:5: C: RSpec/ExampleLength: Example has too many lines. [13/5]
    it 'allows empty wg_fqdn while keeping other parameters' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:34:5: C: RSpec/MultipleExpectations: Example has too many expectations [4/1].
    it 'allows empty wg_fqdn while keeping other parameters' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:36:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ActionController::Base).to receive(:session).and_return({ user_id: admin_user.id })
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:53:5: C: RSpec/ExampleLength: Example has too many lines. [12/5]
    it 'preserves existing FQDN when not provided in update' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:53:5: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
    it 'preserves existing FQDN when not provided in update' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:55:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ActionController::Base).to receive(:session).and_return({ user_id: admin_user.id })
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:74:5: C: RSpec/ExampleLength: Example has too many lines. [9/5]
    it 'requires admin access' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:78:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ActionController::Base).to receive(:session).and_return({ user_id: regular_user.id })
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:89:5: C: RSpec/ExampleLength: Example has too many lines. [7/5]
    it 'handles invalid configuration data' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_fqdn_spec.rb:91:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ActionController::Base).to receive(:session).and_return({ user_id: admin_user.id })
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/admin_network_interface_detection_spec.rb:3:43: C: [Correctable] RSpecRails/InferredSpecType: Remove redundant spec type.
RSpec.describe 'Admin::NetworkInterface', type: :request do
                                          ^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:9:7: C: RSpec/NestedGroups: Maximum example group nesting exceeded [4/3].
      context 'when user is admin' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:11:11: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
          allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(admin_user)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:12:11: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
          allow_any_instance_of(ApplicationController).to receive(:logged_in?).and_return(true)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:15:9: C: RSpec/ExampleLength: Example has too many lines. [11/5]
        it 'displays network interface information for admin users' do ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:15:9: C: RSpec/MultipleExpectations: Example has too many expectations [5/1].
        it 'displays network interface information for admin users' do
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:18:13: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
            interface_name: 'eth0',
            ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:21:11: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.
          })
          ^
spec/requests/admin_network_interface_detection_spec.rb:32:9: C: RSpec/ExampleLength: Example has too many lines. [7/5]
        it 'handles network detection errors gracefully' do ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:32:9: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
        it 'handles network detection errors gracefully' do
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:35:13: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
            error: "No default route found",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:35:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            error: "No default route found",
                   ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:37:11: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.
          })
          ^
spec/requests/admin_network_interface_detection_spec.rb:46:7: C: RSpec/NestedGroups: Maximum example group nesting exceeded [4/3].
      context 'when user is not admin' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:48:11: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
          allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(regular_user)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:49:11: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
          allow_any_instance_of(ApplicationController).to receive(:logged_in?).and_return(true)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:59:7: C: RSpec/NestedGroups: Maximum example group nesting exceeded [4/3].
      context 'when user is not logged in' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:61:11: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
          allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(nil)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_detection_spec.rb:62:11: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
          allow_any_instance_of(ApplicationController).to receive(:logged_in?).and_return(false)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/admin_network_interface_spec.rb:3:53: C: [Correctable] RSpecRails/InferredSpecType: Remove redundant spec type.
RSpec.describe 'Admin Network Interface Detection', type: :request do
                                                    ^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:4:20: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:admin_user) {
                   ^
spec/requests/admin_network_interface_spec.rb:14:5: C: RSpec/ExampleLength: Example has too many lines. [12/5]
    it 'populates network interface information for admin users' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:14:5: C: RSpec/MultipleExpectations: Example has too many expectations [5/1].
    it 'populates network interface information for admin users' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:16:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ActionController::Base).to receive(:session).and_return({ user_id: admin_user.id })
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:34:5: C: RSpec/ExampleLength: Example has too many lines. [8/5]
    it 'handles network detection errors gracefully' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:34:5: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
    it 'handles network detection errors gracefully' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:36:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ActionController::Base).to receive(:session).and_return({ user_id: admin_user.id })
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:40:100: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                                                                            error: "No default route found",
                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_network_interface_spec.rb:40:121: C: Layout/LineLength: Line is too long. [124/120]
                                                                                            error: "No default route found",
                                                                                                                        ^^^^
spec/requests/admin_network_interface_spec.rb:54:7: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
      allow_any_instance_of(ActionController::Base).to receive(:session).and_return({ user_id: regular_user.id })
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/admin_vpn_configuration_spec.rb:3:43: C: [Correctable] RSpecRails/InferredSpecType: Remove redundant spec type.
RSpec.describe 'Admin::VpnConfiguration', type: :request do
                                          ^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:15:9: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
        allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(admin_user)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:16:9: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
        allow_any_instance_of(ApplicationController).to receive(:logged_in?).and_return(true)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:19:7: C: RSpec/ExampleLength: Example has too many lines. [11/5]
      it 'updates VPN configuration with wg_fqdn parameter' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:19:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'updates VPN configuration with wg_fqdn parameter' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:34:7: C: RSpec/ExampleLength: Example has too many lines. [11/5]
      it 'allows empty wg_fqdn while keeping other parameters' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:34:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'allows empty wg_fqdn while keeping other parameters' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:49:7: C: RSpec/ExampleLength: Example has too many lines. [11/5]
      it 'handles complex FQDN values' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:49:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'handles complex FQDN values' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:51:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/admin_vpn_configuration_spec.rb:68:9: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
        allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(regular_user)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:69:9: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
        allow_any_instance_of(ApplicationController).to receive(:logged_in?).and_return(true)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:72:7: C: RSpec/ExampleLength: Example has too many lines. [6/5]
      it 'denies access to regular users' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:85:9: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
        allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(admin_user)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:86:9: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
        allow_any_instance_of(ApplicationController).to receive(:logged_in?).and_return(true)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/admin_vpn_configuration_spec.rb:89:7: C: RSpec/ExampleLength: Example has too many lines. [7/5]
      it 'handles validation errors gracefully' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:5:30: C: [Correctable] RSpecRails/InferredSpecType: Remove redundant spec type.
RSpec.describe 'VpnDevices', type: :request do
                             ^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:19:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:20:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to receive(:logged_in?).and_return(true)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:25:7: C: RSpec/LetSetup: Do not use let! to setup objects not referenced in tests.
      let!(:vpn_configuration) do
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:36:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'downloads config with FQDN filename' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:44:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'generates correct config content' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:54:7: C: RSpec/LetSetup: Do not use let! to setup objects not referenced in tests.
      let!(:vpn_configuration) do
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:65:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'downloads config with IP filename' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:80:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'handles missing VPN configuration gracefully' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:83:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/vpn_devices_spec.rb:92:7: C: RSpec/LetSetup: Do not use let! to setup objects not referenced in tests.
      let!(:vpn_configuration) do
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:103:7: C: RSpec/MultipleExpectations: Example has too many expectations [2/1].
      it 'downloads config with default filename' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:112:7: C: RSpec/LetSetup: Do not use let! to setup objects not referenced in tests.
      let!(:vpn_configuration) do
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:123:7: C: RSpec/MultipleExpectations: Example has too many expectations [3/1].
      it 'handles complex FQDN correctly' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:134:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        get "/vpn_devices/download/99999"
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:139:7: C: RSpec/NestedGroups: Maximum example group nesting exceeded [4/3].
      context 'when device does not belong to user' do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:161:9: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
        allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(nil)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/vpn_devices_spec.rb:162:9: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
        allow_any_instance_of(ApplicationController).to receive(:logged_in?).and_return(false)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

84 files inspected, 335 offenses detected, 97 offenses autocorrectable
